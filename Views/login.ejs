<!DOCTYPE html>
<html lang="fr">


<body>
    <%- include('./partials/header'); -%>

    <div class="central">
        <h1><%= title %></h1>
        <br>
        <div id="login">
            <form>
                <legend>Veuillez saisir vos identifiants</legend>
                <label for="email">email</label>
                <input type="text" name="email" id="email">
                <label for="password">mot de passe</label>
                <input type="password" name="password" id="password">
                <button type="submit">connexion</button>
            </form>
        </div>

        <br>
        <div id="profile" style="display:none">
            <button id="display-payload">voir le payload</button>
            <button id="disconnectBtn">déconnexion</button>
            <div id="decoded-payload"></div>
            <div>
                <a href="#" id="member-only">expace membre</a>

            </div>
        </div>

        <%- include('./partials/footer'); -%>
    </div>

    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
        var form = document.querySelector('form');
        form.addEventListener("submit", loginUser);

        var loginArea = document.querySelector('#login');
        var profileArea = document.querySelector('#profile');
        var connectionLinkArea = document.querySelector('#connectionLink');
        handleFormDisplay();
        var displayPayloadBtn = document.querySelector('#display-payload');
        displayPayloadBtn.addEventListener('click', displayPayload);
        var disconnectBtn = document.querySelector('#disconnectBtn');
        disconnectBtn.addEventListener('click', disconnect);
        var memberOnlyLink = document.querySelector('#member-only');
        memberOnlyLink.addEventListener('click', makeRequestWithToken);
        function loginUser(event) {
            loginUserWithXHR(event);
        }

        function loginUserWithXHR(event) {
            event.preventDefault();
            console.log('loginUserWithXHR');
            // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send
            var xhr = new XMLHttpRequest();
            xhr.open("POST", '/login', true);
            //Send the proper header information along with the request
            xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
            xhr.onreadystatechange = function () {//Call a function when the state changes.
                if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
                    // add token to localStorage
                    var token = xhr.response;
                    localStorage.setItem('token', token);
                    switchToLoggedinMode();
                    form.reset();
                }
            }
            var email = document.getElementById('email').value;
            var password = document.getElementById('password').value;
            var payLoad = "email=" + email + "&" + "password=" + password;
            xhr.send(payLoad);
        }
        function handleFormDisplay() {
            tokenFromStorage = localStorage.getItem('token');
            console.log('handleFormDisplay tokenFromStorage', tokenFromStorage);
            if (tokenFromStorage) {
                switchToLoggedinMode();
            } else {
                switchToLoggedOutMode();
            }
        }
        function switchToLoggedinMode() {
            loginArea.style.display = 'none';
            profileArea.style.display = 'block';
            connectionLinkArea.innerHTML = '<a href="/login">déconnexion</a>';
        }
        function switchToLoggedOutMode() {
            loginArea.style.display = 'block';
            profileArea.style.display = 'none';
            connectionLinkArea.innerHTML = '<a href="/login">connexion</a>';
        }
        function displayPayload() {
            var payload = parseJwt();
            var decodedPayloadDiv = document.querySelector('#decoded-payload');
            decodedPayloadDiv.innerHTML = '<pre>' + JSON.stringify(payload) + '</pre>';
        }
        function parseJwt() {
            tokenFromStorage = localStorage.getItem('token');
            console.log('parseJwt tokenFromStorage', tokenFromStorage);
            if (tokenFromStorage) {
                var base64Payload = tokenFromStorage.split('.')[1];
                return JSON.parse(window.atob(base64Payload));
            } else {
                return 'no token to parse';
            }
        };
        function disconnect() {
            switchToLoggedOutMode();
            localStorage.removeItem('token');
        }

        function makeRequestWithToken(evt) {
            evt.preventDefault();
            console.log('makeRequestWithToken');
            var page = this.id;
            tokenFromStorage = localStorage.getItem('token');
            var config = {};
            if (tokenFromStorage) {
                config.headers = { 'Authorization': "Bearer " + JSON.parse(tokenFromStorage) }
            }
            var bodyParameters = {};
            axios.get(
                'http://localhost:3000/' + page,
                config
            ).then((res) => {
                console.log('success');
                console.log(res);
                const memberDataDiv = document.querySelector('#member-data');

            })
                .catch(err => {
                    console.error('makeRequestWithToken err', err);
                });
        }
    </script>
</body>

</html>